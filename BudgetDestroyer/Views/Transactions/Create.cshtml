@using BudgetDestroyer.Extensions
@using Microsoft.AspNet.Identity;
@model BudgetDestroyer.Models.Transaction

@{
    Layout = null;
    ViewBag.HouseAccountId = ViewData["HouseAccountsId"];
    ViewBag.TransactionTypeId = ViewData["TransactionTypes"];
}

<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="addTransactionModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body">
                    @using (Html.BeginForm("Create", "Transactions", FormMethod.Post, new { @class = "card" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("EnteredById", User.Identity.GetUserId())

                        <div class="card-body p-6">
                            <div class="card-title">
                                <h4>Transaction</h4>
                                <hr />
                            </div>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.HouseAccountId, "HouseAccountId", htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownList("HouseAccountId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HouseAccountId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TransactionTypeId, "TransactionTypeId", htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownList("TransactionTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TransactionTypeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BudgetItemId, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.BudgetItemId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "form-label" })
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Reconciled)
                                    @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ReconciledAmount, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.ReconciledAmount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReconciledAmount, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-footer">
                                <input type="submit" value="Create" class="btn btn-primary btn-block" />
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-default pull-left" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>