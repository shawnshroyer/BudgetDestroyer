@using BudgetDestroyer.Models
@using BudgetDestroyer.Helpers
@model Household

@{
    UserRolesHelper userRolesHelper = new UserRolesHelper();
    HouseAccount houseAccount = new HouseAccount();
    Transaction transaction = new Transaction();
    BudgetItem budgetItem = new BudgetItem();
    Budget budget = new Budget();
}

<div class="my-3 my-md-5">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-xl-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Budget Lookout</h3>
                    </div>
                    <div class="card-body">
                        <div id="budgetChart" class="myChart"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-xl-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Budget Category Lookout</h3>
                    </div>
                    <div class="card-body">
                        <div id="budgetItemChart" class="myChart"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bank Account Management -->
        @Html.Partial("~/Views/HouseAccounts/index.cshtml", (List<HouseAccount>)ViewBag.HouseAccounts)

        <!-- Transaction Management -->
        @Html.Partial("~/Views/Transactions/Index.cshtml", (List<Transaction>)ViewBag.Transactions)

        <!-- List of Users -->
        <div class="row row-cards row-deck">
            <div class="col-md-6 col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Members of the House</h3>
                    </div>
                    <div class="card-body o-auto">
                        <ul class="list-unstyled list-separated">
                            @foreach (var houseUser in HouseholdHelper.UsersInHouse(Model.Id))
                            {
                                <li class="list-separated-item">
                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                            <span class="avatar avatar-md d-block" style="background-image: url(../../Avatar/default.png)"></span>
                                        </div>
                                        <div class="col">
                                            <div>
                                                <a href="javascript:void(0)" class="text-inherit h5">@houseUser.FullName</a> <small>@userRolesHelper.GetUserRole(houseUser.Id)</small>
                                            </div>
                                            <small class="d-block item-except text-sm text-muted h-1x">@houseUser.Email</small>
                                        </div>
                                        @*<div class="col-auto">
                                                <!-- This can be used to allow Head of House to remove member -->
                                                <div class="item-action dropdown">
                                                    <a href="javascript:void(0)" data-toggle="dropdown" class="icon" aria-expanded="false"><i class="fe fe-more-vertical"></i></a>
                                                    <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; transform: translate3d(-181px, 20px, 0px); top: 0px; left: 0px; will-change: transform;">
                                                        <a href="javascript:void(0)" class="dropdown-item"><i class="dropdown-icon fe fe-tag"></i> Action </a>
                                                        <a href="javascript:void(0)" class="dropdown-item"><i class="dropdown-icon fe fe-edit-2"></i> Another action </a>
                                                        <a href="javascript:void(0)" class="dropdown-item"><i class="dropdown-icon fe fe-message-square"></i> Something else here</a>
                                                        <div class="dropdown-divider"></div>
                                                        <a href="javascript:void(0)" class="dropdown-item"><i class="dropdown-icon fe fe-link"></i> Separated link</a>
                                                    </div>
                                                </div>
                                            </div>*@
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            @Html.Partial("~/Views/Budgets/Index.cshtml", (List<Budget>)ViewBag.Budgets)

            @Html.Partial("~/Views/BudgetItems/Index.cshtml", (List<BudgetItem>)ViewBag.BudgetItems)
        </div>
    </div>
</div>

@Html.Partial("~/Views/HouseAccounts/create.cshtml", houseAccount)
@Html.Partial("~/Views/Transactions/create.cshtml", transaction, new ViewDataDictionary { { "HouseAccountId", ViewBag.HouseAccountsSelect }, { "TransactionTypes", ViewBag.TransactionTypes }, { "BudgetItemSelect", ViewBag.BudgetItemSelect } })
@Html.Partial("~/Views/Budgets/create.cshtml", budget)
@Html.Partial("~/Views/BudgetItems/create.cshtml", budgetItem, new ViewDataDictionary { { "BudgetId", ViewBag.BudgetId } })
<div id="modalRender"></div>

@section scripts
{
    <script>
        $(function () {
            $('#transactionTable').DataTable({
                "order": [[1, "desc"]]
            });
        });
    </script>
    <script>
            $.post('@Url.Action("GetBudgetDataForBarChart", "Morris")').then
                (function (response) {
                    new Morris.Bar({
                        element: 'budgetChart',
                        data: response,
                        xkey: 'Label',
                        ykeys: ['Target', 'Actual'],
                        labels: ['Target', 'Actual'],
                        xLabelAngle: 45,
                        preUnits: '$',
                        yLabelFormat: function (y) {
                            return y = parseFloat(Math.round(y * 100) / 100).toFixed(2);
                        }
                    });
                });
    </script>
    <script>
            $.post('@Url.Action("GetBudgetItemDataForBarChart", "Morris")').then
                (function (response) {
                    new Morris.Bar({
                        element: 'budgetItemChart',
                        data: response,
                        xkey: 'Label',
                        ykeys: ['Target', 'Actual'],
                        labels: ['Target', 'Actual'],
                        xLabelAngle: 45,
                        preUnits: '$',
                        yLabelFormat: function (y) {
                            return y = parseFloat(Math.round(y * 100) / 100).toFixed(2);
                        }
                    });
                });
    </script>

    <script src="~/Scripts/Households.js"></script>
}
@*<script>
        $(".tranDeleteBtn").click(function () {

        });
    </script>*@

@* Would like to be able to edit a transaction via modal *@
@*<script>
        $(".tranEditBtn").click(function () {
            let arg1 = event.target.getAttribute('data-edit');
            @Html.Partial("~/Views/Transactions/Edit.cshtml", transaction, new ViewDataDictionary { { "HouseAccountsId", ViewBag.HouseAccountsSelect }, { "TransactionTypes", ViewBag.TransactionTypes } })

            $.ajax({
                url: "@Url.Action("Edit", "Transactions")/"+arg1,
                type: "GET",
                success: function (response, status, xhr) {
                    $("modalRender").append(response);
                    $("modalRender").html(response);
                    //var jqContainer = appendContainer();
                    //jqContainer.html(response);
                }
            });
            $('#editTranModal').modal('toggle');
        });
    </script>*@







@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>*@
